{"version":3,"sources":["components/FilterPersons.js","components/PersonAlreadyAdded.js","components/Person.js","services/persons.js","components/Notification.js","components/ErrorNote.js","App.js","index.js"],"names":["FilterPersons","flt","persons","undefined","filter","person","name","includes","PersonAlreadyAdded","newName","map","Person","_ref","handler","react_default","a","createElement","number","onClick","baseUrl","services_persons","axios","get","post","id","delete","concat","then","response","console","log","put","Notification","message","className","ErrorNote","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","filteredPersons","setFilteredPersons","_useState5","_useState6","setNewName","_useState7","_useState8","newNumber","setNewNumber","_useState9","_useState10","setFilter","_useState11","_useState12","msgText","setMsgText","_useState13","_useState14","errorText","setErrorText","useEffect","personService","data","notify","text","setTimeout","errorNotify","removeEntry","window","confirm","newPersons","pers","components_Notification","components_ErrorNote","value","onChange","event","target","onSubmit","preventDefault","oldPerson","catch","error","type","components_Person","key","ReactDOM","render","src_App","document","getElementById"],"mappings":"qMASeA,EATO,SAACC,EAAKC,GACxB,MAAY,KAARD,QAA0BE,IAAZD,EACTA,EAAQE,OAAO,SAAAC,GAAM,OAC1BA,EAAOC,KAAKC,SAASN,KAEhBC,GCDEM,EAJY,SAACN,EAASO,GAAV,OACvBP,EAAQQ,IAAI,SAAAL,GAAM,OAAIA,EAAOC,OAAMC,SAASE,ICY/BE,EAXF,SAAAC,GAAuB,IAArBP,EAAqBO,EAArBP,OAAQQ,EAAaD,EAAbC,QACrB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACCX,EAAOC,KADR,KACgBD,EAAOY,OACvBH,EAAAC,EAAAC,cAAA,UAAQE,QAAS,kBAAML,EAAQR,KAA/B,6BCLFc,EAAU,eAwBCC,EAtBA,WACb,OAAOC,IAAMC,IAAIH,IAqBJC,EAlBO,SAACf,GACrB,OAAOgB,IACNE,KAAKJ,EAASd,IAgBFe,EAbY,SAACI,GAC1BH,IACCI,OADD,GAAAC,OACWP,EADX,KAAAO,OACsBF,IACrBG,KAAK,SAAAC,GACJC,QAAQC,IAAIF,MASDR,EALU,SAACf,GACxB,OAAOgB,IACNU,IADM,GAAAL,OACCP,EADD,KAAAO,OACYrB,EAAOmB,IAAMnB,ICVrB2B,EAXM,SAAApB,GAAe,IAAbqB,EAAarB,EAAbqB,QACvB,MAAgB,KAAZA,EACO,KAGPnB,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,QACVD,ICKME,EAXG,SAAAvB,GAAe,IAAbqB,EAAarB,EAAbqB,QAChB,MAAgB,KAAZA,EACO,KAGPnB,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,SACVD,IC0IEG,EA1IH,WAAM,IAAAC,EACcC,mBAAS,IADvBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTnC,EADSqC,EAAA,GACAG,EADAH,EAAA,GAAAI,EAE8BL,mBAAS,IAFvCM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAETE,EAFSD,EAAA,GAEQE,EAFRF,EAAA,GAAAG,EAGcT,mBAAS,IAHvBU,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAGTtC,EAHSuC,EAAA,GAGAC,EAHAD,EAAA,GAAAE,EAIkBZ,mBAAS,IAJ3Ba,EAAAX,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GAITE,EAJSD,EAAA,GAIEE,EAJFF,EAAA,GAAAG,EAKYhB,mBAAS,IALrBiB,EAAAf,OAAAC,EAAA,EAAAD,CAAAc,EAAA,GAKTlD,EALSmD,EAAA,GAKDC,EALCD,EAAA,GAAAE,EAMcnB,mBAAS,IANvBoB,EAAAlB,OAAAC,EAAA,EAAAD,CAAAiB,EAAA,GAMTE,EANSD,EAAA,GAMAE,EANAF,EAAA,GAAAG,EAOkBvB,mBAAS,IAP3BwB,EAAAtB,OAAAC,EAAA,EAAAD,CAAAqB,EAAA,GAOTE,EAPSD,EAAA,GAOEE,EAPFF,EAAA,GAShBG,oBAAU,WACRC,IAECvC,KAAK,SAAAC,GACJc,EAAWd,EAASuC,MACpBrB,EAAmBlB,EAASuC,SAE7B,IAEH,IAaMC,EAAS,SAACC,GACdT,EAAWS,GACXC,WAAW,WACTV,EAAW,KACV,MAGCW,EAAc,SAACF,GACnBL,EAAaK,GACbC,WAAW,WACTN,EAAa,KACZ,MA8CCQ,EAAc,SAACnE,GACnB,GAAIoE,OAAOC,QAAP,gBAAAhD,OAA+BrB,EAAOC,KAAtC,OAAgD,CACpD4D,EAAiC7D,EAAOmB,IACxC,IAAMmD,EAAazE,EAAQE,OAAO,SAAAwE,GAAI,OAAIA,EAAKtE,OAASD,EAAOC,OAC/DoC,EAAWiC,GACX7B,EAAmB6B,GACnBP,EAAM,GAAA1C,OAAIrB,EAAOC,KAAX,kBAIR,OACIQ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAC6D,EAAD,CAAc5C,QAAS0B,IACvB7C,EAAAC,EAAAC,cAAC8D,EAAD,CAAW7C,QAAS8B,IACpBjD,EAAAC,EAAAC,cAAA,0CACqBF,EAAAC,EAAAC,cAAA,SACnB+D,MAAO3E,EACP4E,SAhFoB,SAACC,GAC3BzB,EAAUyB,EAAMC,OAAOH,OACvBjC,EAAmB9C,EAAciF,EAAMC,OAAOH,MAAO7E,QAiFjDY,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,QAAMmE,SAjEa,SAACF,GACxBA,EAAMG,iBACN,IAAM/E,EAAS,CACbC,KAAMG,EACNQ,OAAQmC,GAEV,GAAI5C,EAAmBN,EAASO,GAAS,CACvC,GAAIgE,OAAOC,QAAP,GAAAhD,OAAkBrB,EAAOC,KAAzB,0DAAsF,CACxF,IAAM+E,EAAYnF,EAAQE,OAAO,SAAAwE,GAAI,OAAIA,EAAKtE,OAASD,EAAOC,OAAM,GACpED,EAAOmB,GAAK6D,EAAU7D,GACtB0C,EACkB7D,GACjBsB,KAAK,SAAAC,GACFc,EAAWxC,EAAQQ,IAAI,SAAAkE,GAAI,OAAIA,EAAKpD,KAAOnB,EAAOmB,GAAKoD,EAAOhD,EAASuC,QACvErB,EAAmB5C,EAAQQ,IAAI,SAAAkE,GAAI,OAAIA,EAAKpD,KAAOnB,EAAOmB,GAAKoD,EAAOhD,EAASuC,QAC/EC,EAAM,GAAA1C,OAAIrB,EAAOC,KAAX,iBAETgF,MAAM,SAAAC,GACL7C,EAAWxC,EAAQE,OAAO,SAAAwE,GAAI,OAAIA,EAAKpD,KAAOnB,EAAOmB,MACrDsB,EAAmB5C,EAAQE,OAAO,SAAAwE,GAAI,OAAIA,EAAKpD,KAAOnB,EAAOmB,MAC7D+C,EAAW,eAAA7C,OAAarB,EAAOC,KAApB,0CAGf2C,EAAW,IACXI,EAAa,SAEba,EACe7D,GACdsB,KAAK,SAAAC,GACJvB,EAAOmB,GAAKI,EAASuC,KAAK3C,GAC1B,IAAMmD,EAAazE,EAAQwB,OAAOrB,GAClCqC,EAAWiC,GACX7B,EAAmB6B,GACnB1B,EAAW,IACXI,EAAa,IACbe,EAAM,GAAA1C,OAAIrB,EAAOC,KAAX,oBAEPgF,MAAM,SAAAC,GACLhB,EAAW,GAAA7C,OAAI6D,EAAM3D,SAASuC,KAAKoB,YA4BjCzE,EAAAC,EAAAC,cAAA,oBACQF,EAAAC,EAAAC,cAAA,SACN+D,MAAOtE,EACPuE,SAhGmB,SAACC,GAC5BhC,EAAWgC,EAAMC,OAAOH,WAkGlBjE,EAAAC,EAAAC,cAAA,sBACUF,EAAAC,EAAAC,cAAA,SACR+D,MAAO3B,EACP4B,SAlGqB,SAACC,GAC9B5B,EAAa4B,EAAMC,OAAOH,WAoGpBjE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQwE,KAAK,UAAb,iBAGJ1E,EAAAC,EAAAC,cAAA,qBACC6B,EAAgBnC,IAAI,SAAAL,GAAM,OAC3BS,EAAAC,EAAAC,cAACyE,EAAD,CACAC,IAAKrF,EAAOC,KACZD,OAAQA,EACRQ,QAAS2D,cCvIjBmB,IAASC,OAAO9E,EAAAC,EAAAC,cAAC6E,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.e39be1f3.chunk.js","sourcesContent":["const FilterPersons = (flt, persons) => {\n    if (flt !== \"\" && persons !== undefined){\n      return persons.filter(person => \n        person.name.includes(flt))\n    } else {\n      return persons\n    }\n}\n\nexport default FilterPersons","const PersonAlreadyAdded = (persons, newName) => (\n    persons.map(person => person.name).includes(newName)\n)\n\nexport default PersonAlreadyAdded\n","import React from 'react'\n\nconst Person = ({person, handler}) => {\n    return (\n      <div>\n        <li>\n        {person.name}  {person.number} \n        <button onClick={() => handler(person)}>poista</button>\n        </li>\n      </div>\n    )\n  }\n\n  export default Person","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\n  const getAll = () => {\n    return axios.get(baseUrl)\n  }\n\n  const newPersonToDb = (person) => {\n    return axios\n    .post(baseUrl, person)\n  }\n\n  const removePersonFromDb = (id) => {\n    axios\n    .delete(`${baseUrl}/${id}`)\n    .then(response => {\n      console.log(response)\n    })\n  }\n\n  const modifyPersonInDb = (person) => {\n    return axios\n    .put(`${baseUrl}/${person.id}`, person)\n  }\n\n  export default { getAll, newPersonToDb, removePersonFromDb, modifyPersonInDb }","import React from 'react'\n\nconst Notification = ({message}) => {\nif (message === ''){\n    return null\n}\nreturn (\n    <div className=\"note\">\n        {message}\n    </div>\n    )\n}\n\nexport default Notification","import React from 'react'\n\nconst ErrorNote = ({message}) => {\n    if (message === ''){\n        return null\n    }\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n        )\n}\n\nexport default ErrorNote\n","import React, {useState, useEffect} from 'react';\nimport FilterPersons from './components/FilterPersons'\nimport PersonAlreadyAdded from './components/PersonAlreadyAdded'\nimport Person from './components/Person'\nimport personService from './services/persons.js'\nimport Notification from './components/Notification.js'\nimport ErrorNote from './components/ErrorNote.js'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [filteredPersons, setFilteredPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [msgText, setMsgText] = useState('')\n  const [errorText, setErrorText] = useState('')\n\n  useEffect(() => {\n    personService\n    .getAll()\n    .then(response => {\n      setPersons(response.data)\n      setFilteredPersons(response.data)\n    })\n  }, [])\n\n  const changeNewNameHandler = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const changeNewNumberHandler = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const changeFilterHandler = (event) => {\n    setFilter(event.target.value)\n    setFilteredPersons(FilterPersons(event.target.value, persons))\n  }\n\n  const notify = (text) => {\n    setMsgText(text)\n    setTimeout(() => {\n      setMsgText('')\n    }, 5000);\n  }\n\n  const errorNotify = (text) => {\n    setErrorText(text)\n    setTimeout(() => {\n      setErrorText('')\n    }, 5000);\n  }\n\n  const addOrModifyEntry = (event) => {\n    event.preventDefault()\n    const person = {\n      name: newName,\n      number: newNumber\n    }\n    if (PersonAlreadyAdded(persons, newName)){\n      if (window.confirm(`${person.name} on jo luettelossa, korvataanko vanha numero uudella?`)){\n        const oldPerson = persons.filter(pers => pers.name === person.name)[0]\n        person.id = oldPerson.id\n        personService\n        .modifyPersonInDb(person)\n        .then(response => {\n            setPersons(persons.map(pers => pers.id !== person.id ? pers : response.data))\n            setFilteredPersons(persons.map(pers => pers.id !== person.id ? pers : response.data))\n            notify(`${person.name} muokattu.`)\n        })\n        .catch(error => {\n          setPersons(persons.filter(pers => pers.id !== person.id))\n          setFilteredPersons(persons.filter(pers => pers.id !== person.id))\n          errorNotify(`Henkilön ${person.name} tietoja ei löydy tietokannasta.`)\n        })\n      }\n      setNewName('')\n      setNewNumber('')\n    } else {\n      personService\n      .newPersonToDb(person)\n      .then(response => {\n        person.id = response.data.id\n        const newPersons = persons.concat(person)\n        setPersons(newPersons)\n        setFilteredPersons(newPersons)\n        setNewName('')\n        setNewNumber('')\n        notify(`${person.name} tallennettu.`)\n      })\n      .catch(error => {\n        errorNotify(`${error.response.data.error}`)\n      })\n    }\n  }\n\n  const removeEntry = (person) => {\n    if (window.confirm(`Poistetaanko ${person.name} ?`)){\n    personService.removePersonFromDb(person.id)\n    const newPersons = persons.filter(pers => pers.name !== person.name)\n    setPersons(newPersons)\n    setFilteredPersons(newPersons)\n    notify(`${person.name} poistettu.`)\n    }\n  }\n\n  return (\n      <div>\n        <h2>Puhelinluettelo</h2>\n        <Notification message={msgText}/>\n        <ErrorNote message={errorText}/>\n        <div>\n          rajaa näytettäviä: <input\n          value={filter}\n          onChange={changeFilterHandler}\n          />\n        </div>\n        <h3>Lisää uusi</h3>\n        <form onSubmit={addOrModifyEntry}>\n          <div>\n            nimi: <input \n            value={newName} \n            onChange={changeNewNameHandler}\n            />\n          </div>\n          <div>\n            numero: <input \n            value={newNumber} \n            onChange={changeNewNumberHandler}\n            />\n          </div>\n          <div>\n            <button type=\"submit\">lisää</button>\n          </div>\n        </form>\n        <h3>Numerot</h3>\n        {filteredPersons.map(person => \n        <Person \n        key={person.name} \n        person={person}\n        handler={removeEntry}\n        />)}\n      </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}